var T=Object.defineProperty;var N=(u,w,x)=>w in u?T(u,w,{enumerable:!0,configurable:!0,writable:!0,value:x}):u[w]=x;var I=(u,w,x)=>(N(u,typeof w!="symbol"?w+"":w,x),x);(function(u,w){typeof exports=="object"&&typeof module!="undefined"?w(exports):typeof define=="function"&&define.amd?define(["exports"],w):(u=typeof globalThis!="undefined"?globalThis:u||self,w(u.etali={}))})(this,function(u){"use strict";function w(f){let[s,h,t]=[0,0,0];for(const a of f){const r=Math.PI/2-a[1]*Math.PI/180,c=a[0]*Math.PI/180;s+=Math.cos(r),h+=Math.sin(r)*Math.cos(c),t+=Math.sin(r)*Math.sin(c)}let e=Math.atan2(t,h);e<0&&(e+=2*Math.PI);const i=Math.abs(Math.atan(Math.sqrt(h*h+t*t)/s));return[e*180/Math.PI,90-i*180/Math.PI]}function x(f){const s=[[0,[]]];for(const t of f){let e=s.length-1;for(;e>=0;--e){const a=s[e];if(a[0]<=t[0]){a[0]<t[0]&&(s.splice(e+1,0,[t[0],s[e][1].slice()]),e+=1);break}}let i=s.length-1;for(;i>=0;--i){const a=s[i];if(a[0]<=t[1]){a[0]<t[1]&&(s.splice(i+1,0,[t[1],a[1].slice()]),i+=1);break}}for(let a=e;a<i;++a)s[a][1].push(t[2])}const h=[];for(let t=0;t<s.length-1;++t)s[t][1].length>0&&h.push([s[t][0],s[t+1][0],s[t][1]]);return h}function*y(f,s){const h=Math.floor(f.length/s),t=f.length-h*s;let e=0;for(let i=0;i<t;++i)yield f.slice(e,e+h+1),e+=h+1;for(let i=t;i<s;++i)yield f.slice(e,e+h),e+=h}function m(f){const s={get(h,t){if(!["number","string"].includes(typeof t))return h[t];const e=Number(t);if(isNaN(e))return h[t];if(e<0||e>=h.length)return;const i=h.batchIdx(e);if(i!=null)return h.rawBatches[i[0]][i[1]]},set(h,t,e){if(!["number","string"].includes(typeof t))return h[t];const i=Number(t);if(isNaN(i))return h[t]=e;if(i<0||i>=h.length)return!1;const a=h.batchIdx(i);return a==null?!1:h.rawBatches[a[0]][a[1]]=e}};return new Proxy(f,s)}class S{constructor(s,h){I(this,"rawBatches");I(this,"batchSize");const t=Math.floor((s.length-1)/h)+1;this.rawBatches=[...y(s,t)],this.batchSize=h}*contentIterator(){let s=0;for(const h of this.rawBatches)for(const t of h)yield[s,t],++s}contentIdx(s,h){if(s<0||s>=this.length||h<0||h>=this.rawBatches[s].length)return;let t=0;for(let e=0;e<s;++e)t+=this.rawBatches[e].length;return t+h}batchIdx(s){if(s==null)return;let h=0,[t,e]=[-1,-1];for(const[i,a]of this.rawBatches.entries())if(h+=a.length,t===-1&&h>s){t=i,e=s-(h-a.length);break}if(t!==-1)return[t,e]}batchIdxs(s,h){let t=0,[e,i,a,r]=[-1,-1,-1,-1];for(const[c,l]of this.rawBatches.entries())if(t+=l.length,e===-1&&t>s&&(e=c,i=s-(t-l.length)),a===-1&&t>=h){a=c,r=h-(t-l.length),s===h&&(e=c,i=r);break}for(;e>0&&i===0;)e-=1,i=this.rawBatches[e].length;for(;a<this.rawBatches.length-1&&r===this.rawBatches[a].length;)a+=1,r=0;return e===-1&&(e=this.rawBatches.length-1,i=this.rawBatches[e].length),a===-1&&(a=this.rawBatches.length-1,r=this.rawBatches[a].length),[[e,i],[a,r]]}find(s,h){let t=0;for(const e of this.rawBatches){const i=(r,c)=>s(r,c+t,this),a=e.find(i,h);if(a!=null)return a;t+=e.length}}findIndex(s,h){let t=0;for(const e of this.rawBatches){const i=(r,c)=>s(r,c+t,this),a=e.findIndex(i,h);if(a>=0)return t+a;t+=e.length}return-1}fill(s,h,t){if(this.rawBatches.length===0)return this;let e;if(h==null||h<-this.length?e=[0,0]:h>=0?e=this.batchIdx(h):e=this.batchIdx(this.length+h),e==null)return this;let i;if(t==null||t>this.length?i=[this.rawBatches.length,0]:t>=0?i=this.batchIdx(t):i=this.batchIdx(this.length+t),i==null)return this;if(e[0]>i[0])return this;if(e[0]===i[0])this.rawBatches[e[0]].fill(s,e[1],i[1]);else{let a=this.rawBatches[e[0]];a.fill(s,e[1]);for(let r=e[0]+1;r<i[0];++r)a=this.rawBatches[r],a.fill(s);a=this.rawBatches[i[0]],a.fill(s,void 0,i[1])}return this}copyWithin(s,h,t){if(this.rawBatches.length===0)return this;let e;if(h<-this.length?e=[0,0]:h>=0?e=this.batchIdx(h):e=this.batchIdx(this.length+h),e==null)return this;let i;if(t==null||t>this.length?i=[this.rawBatches.length,0]:t>=0?i=this.batchIdx(t):i=this.batchIdx(this.length+t),i==null)return this;if(e[0]>i[0])return this;let a;if(s<-this.length?a=[0,0]:s>=0?a=this.batchIdx(s):a=this.batchIdx(this.length+s),a==null)return this;if(e[0]===a[0]&&e[1]===a[1])return this;if(e[0]>a[0]||e[0]===a[0]&&e[1]>a[1]){let[r,c]=e,[l,n]=a;for(;r<i[0]||c<i[1];)this.rawBatches[l][n]=this.rawBatches[r][c],++c,c>=this.rawBatches[r].length&&(++r,c=0),++n,n>=this.rawBatches[l].length&&(++l,n=0)}else{const r=this.contentIdx(...e),c=this.contentIdx(...i),l=this.contentIdx(...a),n=l+c-r;let B=i,o=this.batchIdx(n);if(o==null){const A=r+this.length-l;B=this.batchIdx(A),o=[this.rawBatches.length,0]}let[d,g]=B,[p,b]=o;for(;d>e[0]||g>e[1];)--g,g<0&&(--d,g=this.rawBatches[d].length-1),--b,b<0&&(--p,b=this.rawBatches[p].length-1),this.rawBatches[p][b]=this.rawBatches[d][g]}return this}*[Symbol.iterator](){for(const s of this.rawBatches)for(const h of s)yield h}*entries(){let s=0;for(const h of this)yield[s,h],s+=1}*keys(){for(const[s]of this.entries())yield s}*values(){yield*this}includes(s,h){if(h==null)return this.rawBatches.some(t=>t.includes(s));{const t=this.batchIdx(h);if(t==null)return!1;if(this.rawBatches[t[0]].includes(s,t[1]))return!0;for(let e=t[0]+1;e<this.rawBatches.length;++e)if(this.rawBatches[e].includes(s))return!0;return!1}}get length(){return this.rawBatches.reduce((s,h)=>s+h.length,0)}toString(){return this.rawBatches.toString()}toLocaleString(){return this.rawBatches.toLocaleString()}concat(...s){const h=this.clone();for(const t of s)t.rawBatches!=null&&(h.rawBatches=h.rawBatches.concat(t.rawBatches));return h}join(s){return this.rawBatches.map(h=>h.join(s)).join(s)}reverse(){const s=this.clone();return s.rawBatches=s.rawBatches.reverse().map(h=>h.reverse()),s}slice(s,h){const t=[];if(s==null&&h==null)for(const e of this.rawBatches)t.push(...e);else if(h==null){if(s>=this.length)return[];let e=this.batchIdx(s);e==null&&(e=[0,0]),t.push(...this.rawBatches[e[0]].slice(e[1]));for(let i=e[0]+1;i<this.rawBatches.length;++i)t.push(...this.rawBatches[i])}else if(s==null){if(h<=0)return[];let e=this.batchIdx(h);if(e==null){const i=this.rawBatches.length-1;e=[i,this.rawBatches[i].length]}for(let i=0;i<e[0]+1&&i<this.rawBatches.length;++i)t.push(...this.rawBatches[i]);t.push(...this.rawBatches[e[0]].slice(0,e[1]))}else{if(s>=this.length)return[];if(h<=0)return[];let e=this.batchIdx(s);e==null&&(e=[0,0]);let i=this.batchIdx(h);if(i==null){const a=this.rawBatches.length-1;i=[a,this.rawBatches[a].length]}if(e[0]===i[0])t.push(...this.rawBatches[e[0]].slice(e[1],i[1]));else{t.push(...this.rawBatches[e[0]].slice(e[1]));for(let a=e[0]+1;a<i[0]&&a<this.rawBatches.length;++a)t.push(...this.rawBatches[a]);t.push(...this.rawBatches[i[0]].slice(0,i[1]))}}return t}sort(s){const h=[].concat(...this.rawBatches).sort(s);let t=0;for(const e of this.rawBatches)for(let i=0;i<e.length;++i)e[i]=h[t],t+=1;return this}indexOf(s,h){if(h==null)return this.findIndex(t=>t===s);{const t=this.batchIdx(h);if(t==null)return-1;let e=0;for(let a=0;a<t[0];++a)e+=this.rawBatches[a].length;let i=this.rawBatches[t[0]].indexOf(s,t[1]);if(i!==-1)return e+i;e+=this.rawBatches[t[0]].length;for(let a=t[0]+1;a<this.rawBatches.length;++a){if(i=this.rawBatches[a].indexOf(s),i!==-1)return e+i;e+=this.rawBatches[a].length}return-1}}lastIndexOf(s,h){if(this.rawBatches.length===0)return-1;let t;if(h){if(t=this.batchIdx(h),t==null)return-1}else t=[this.rawBatches.length-1,this.rawBatches[this.rawBatches.length-1].length];let e=0;for(let a=this.rawBatches.length-1;a>t[0];--a)e+=this.rawBatches[a].length;let i=this.rawBatches[t[0]].lastIndexOf(s,t[1]);if(e+=this.rawBatches[t[0]].length,i!==-1)return this.length-e+i;for(let a=t[0]-1;a>=0;--a)if(i=this.rawBatches[a].lastIndexOf(s),e+=this.rawBatches[a].length,i!==-1)return this.length-e+i;return-1}every(s,h){return this.rawBatches.every(t=>t.every(s,h))}some(s,h){return this.rawBatches.some(t=>t.some(s,h))}forEach(s,h){this.rawBatches.forEach(t=>t.forEach(s,h),h)}map(s,h){const t=[];for(const e of this.rawBatches)t.push(...e.map(s,h));return t}filter(s,h){const t=[];for(const e of this.rawBatches)t.push(...e.filter(s,h));return t}flatMap(s){return Array.prototype.concat(...this.map(s))}flat(s){return Array.prototype.flat(s)}reduce(s,h){let t;if(h!=null){t=h;for(const e of this.rawBatches)t=e.reduce(s,t)}else{const e=s;t=this.rawBatches[0].reduce(e);for(const i of this.rawBatches.slice(1))t=i.reduce(e,t)}return t}reduceRight(s,h){let t;if(h!=null){t=h;for(const e of this.rawBatches.reverse())t=e.reduceRight(s,t)}else{const e=s;t=this.rawBatches[this.rawBatches.length-1].reduceRight(e);for(const i of this.rawBatches.reverse().slice(1))t=i.reduceRight(e,t)}return t}at(s){return s>=0&&s<this.length?this[s]:void 0}[Symbol.unscopables](){return{copyWithin:!1,entries:!1,fill:!1,find:!1,findIndex:!1,keys:!1,values:!1}}}class P extends S{throwMut(s){throw Error("Cannot use "+s+" in ImmutableBatchArray")}clone(){const s=z([],this.batchSize);return s.rawBatches=this.rawBatches.map(h=>h.slice()),s}filterInPlace(){this.throwMut("filterInPlace")}spliceAll(){this.throwMut("spliceAll")}pop(){this.throwMut("pop")}push(){return this.throwMut("push"),-1}shift(){this.throwMut("shift")}splice(){return this.throwMut("splice"),[]}unshift(){return this.throwMut("unshift"),-1}}function z(f,s){return m(new P(f,s))}class E extends S{filterInPlace(s){this.rawBatches.forEach((h,t)=>{this.rawBatches[t]=h.filter(s)})}concat(...s){let h=[];h=h.concat(...this.rawBatches);for(const t of s)t.rawBatches&&(h=h.concat(...t.rawBatches));return M(h,this.batchSize)}splice(s,h,...t){const[[e,i],[a,r]]=this.batchIdxs(s,s+h);if(e===a)return this.rawBatches[e].splice(i,h,...t);{const c=Math.floor(t.length/(a-e+1)),l=t.length-c*(a-e+1);let n=0;const B=[];for(const[o,d]of this.rawBatches.slice(e,a+1).entries()){let g=c;o<l&&(g+=1);const p=o===0?i:0,b=o===a-e?r:d.length;B.push(...d.splice(p,b-p,...t.slice(n,n+g))),n+=g}return B}}spliceAll(...s){s.forEach(h=>this.splice(...h))}clone(){const s=M([],this.batchSize);return s.rawBatches=this.rawBatches.map(h=>h.slice()),s}pop(){for(;this.rawBatches.length>0;){const s=this.rawBatches[this.rawBatches.length-1].pop();if(s!=null)return this.rawBatches[this.rawBatches.length-1].length===0&&this.rawBatches.pop(),s;this.rawBatches.pop()}}push(...s){(this.rawBatches.length===0||this.rawBatches[this.rawBatches.length-1].length>=this.batchSize)&&this.rawBatches.push([]);let h=0;for(;h<s.length;){const t=this.rawBatches[this.rawBatches.length-1],e=this.batchSize-t.length;s.length-h<=e?t.push(...s.slice(h)):(t.push(...s.slice(h,h+e)),this.rawBatches.push([])),h+=e}return this.length}shift(){for(;this.rawBatches.length>0;){const s=this.rawBatches[0].shift();if(s!=null)return this.rawBatches[0].length===0&&this.rawBatches.shift(),s;this.rawBatches.shift()}}unshift(...s){(this.rawBatches.length===0||this.rawBatches[0].length>=this.batchSize)&&this.rawBatches.unshift([]);let h=s.length;for(;h>0;){const t=this.rawBatches[0],e=this.batchSize-t.length;h<=e?t.unshift(...s.slice(0,h)):(t.unshift(...s.slice(h-e,h)),this.rawBatches.unshift([])),h-=e}return this.length}}function M(f,s){return m(new E(f,s))}class L extends S{constructor(h,t,e=t/2){const i=e+Math.round((t-e)/2);super(h,i);I(this,"minBatchSize");I(this,"maxBatchSize");I(this,"optimalSize");e>t/2?(console.warn("Minimum batch size for BubbleBatchArray should be less than half maximum batch size; setting to max/2."),this.minBatchSize=t/2):this.minBatchSize=e,this.maxBatchSize=t,this.optimalSize=i}filterInPlace(h){this.rawBatches.forEach((t,e)=>{this.rawBatches[e]=t.filter(h)}),this.mergeSmallBatches()}concat(...h){let t=[];t=t.concat(...this.rawBatches);for(const e of h)e.rawBatches&&(t=t.concat(...e.rawBatches));return v(t,this.minBatchSize,this.maxBatchSize)}splice(h,t,...e){const[i,a]=this.spliceNoBubble(h,t,...e),r=this.mergeSmallBatches(a);return this.splitLargeBatches(r),i}spliceAll(...h){if(h.length===0)return;const t=h.sort((l,n)=>l[0]-n[0]),e=[t[0]];let i=0;for(let l=1;l<t.length;++l){const n=t[l],B=e[i],o=B[0]+B[1];n[0]>=o?(e.push(n),++i):B[1]=Math.max(B[1],o-B[0])}const a=[];let r=null;for(const l of e.reverse()){const[,n]=this.spliceNoBubble(...l);r!=null&&n[1]>=r[0]?n[0]<r[0]&&(r[0]=n[0]):(a.push(n),r=n)}let c=[];for(const l of a){const n=this.mergeSmallBatches(l),B=c.filter(o=>o[0]<n[1]&&n[0]<o[1]);if(B.length>0){c=c.filter(o=>!B.includes(o));for(const o of B)o[0]<n[0]&&(n[0]=o[0]),o[1]<n[1]&&(n[1]=o[1])}c.push(n)}for(const l of c)this.splitLargeBatches(l)}spliceNoBubble(h,t,...e){const[[i,a],[r,c]]=this.batchIdxs(h,h+t),l=[];if(i===r)l.push(...this.rawBatches[i].splice(a,t,...e));else{const n=Math.floor(e.length/(r-i+1)),B=e.length-n*(r-i+1);let o=0;for(const[d,g]of this.rawBatches.slice(i,r+1).entries()){let p=n;d<B&&(p+=1);const b=d===0?a:0,A=d===r-i?c:g.length;l.push(...g.splice(b,A-b,...e.slice(o,o+p))),o+=p}}return[l,[i,r+1]]}mergeSmallBatches(h=[0,this.rawBatches.length]){(h[0]<0||h[0]>=this.rawBatches.length)&&(h[0]=0),(h[1]<=0||h[1]>this.rawBatches.length)&&(h[1]=this.rawBatches.length);const t=[];let e=h[0];for(;e<h[1];){let a=this.rawBatches[e];if(a.length<this.minBatchSize){const r=[e,e+1];let c=a.length;for(++e;e<this.rawBatches.length&&(a=this.rawBatches[e],!(a.length>this.minBatchSize||(c+=a.length,c>this.maxBatchSize)));)r[1]+=1,++e;r[1]-r[0]>1&&t.push(r)}else++e}let i=0;for(const a of t){const r=a[0]-i,c=a[1]-a[0];this.rawBatches.splice(r,c,[].concat(...this.rawBatches.slice(r,r+c))),i+=c-1}return[h[0],h[1]-i]}splitLargeBatches(h=[0,this.rawBatches.length]){const t=[];for(let i=h[0];i<h[1];++i)this.rawBatches[i].length>this.maxBatchSize&&t.push(i);let e=0;for(const i of t){const a=i+e,r=this.rawBatches[a],c=Math.round(r.length/this.optimalSize);this.rawBatches.splice(a,1,...y(r,c)),e+=c-1}}clone(){const h=v([],this.maxBatchSize,this.minBatchSize);return h.rawBatches=this.rawBatches.map(t=>t.slice()),h}pop(){for(;this.rawBatches.length>0;){const h=this.rawBatches[this.rawBatches.length-1].pop();if(h!=null)return this.rawBatches[this.rawBatches.length-1].length===0&&this.rawBatches.pop(),this.mergeSmallBatches([this.rawBatches.length-2,this.rawBatches.length-1]),h;this.rawBatches.pop()}}push(...h){let t=this.rawBatches.length-1;t<0&&(t=0),(this.rawBatches.length===0||this.rawBatches[this.rawBatches.length-1].length>=this.batchSize)&&this.rawBatches.push([]);let e=0;for(;e<h.length;){const i=this.rawBatches[this.rawBatches.length-1],a=this.batchSize-i.length;h.length-e<=a?i.push(...h.slice(e)):(i.push(...h.slice(e,e+a)),this.rawBatches.push([])),e+=a}return this.splitLargeBatches([t,this.rawBatches.length]),this.length}shift(){for(;this.rawBatches.length>0;){const h=this.rawBatches[0].shift();if(h!=null)return this.rawBatches[0].length===0&&this.rawBatches.shift(),this.mergeSmallBatches([0,1]),h;this.rawBatches.shift()}}unshift(...h){let t=0;(this.rawBatches.length===0||this.rawBatches[0].length>=this.batchSize)&&(this.rawBatches.unshift([]),t+=1);let e=h.length;for(;e>0;){const i=this.rawBatches[0],a=this.batchSize-i.length;e<=a?i.unshift(...h.slice(0,e)):(i.unshift(...h.slice(e-a,e)),this.rawBatches.unshift([]),t+=1),e-=a}return this.splitLargeBatches([0,t+1]),this.length}}function v(f,s,h){return m(new L(f,s,h))}u.AverageLonLat=w,u.BatchArray=S,u.BubbleBatchArray=v,u.FlattenRanges=x,u.ImmutBatchArray=z,u.SteadyBatchArray=M,u.chunks=y,u.proxyArrayAccess=m,Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
