// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "Existing Docker Compose (Extend)",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../compose.dev.yaml"
	],

	// "dockerFile": "../Dockerfile",
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "evwritdocker",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",
	// "initializeCommand": "chmod +x dev_script.sh && ./dev_script.sh",
	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "cd /app && chmod +x startup-script.sh && echo y | ./startup-script.sh",
	// "onCreateCommand": "cd /app && chmod +x startup-script.sh && echo y | ./startup-script.sh",
	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root",
	// "remoteEnv": {"SSH_AUTH_SOCK": "$SSH_AUTH_SOCK"},
	// To enable Git authentication with SSH keys inside the container, 
	// uncomment the appropriate "source" line based on your host operating system.
	"mounts": [
		{
			"type": "bind",
			// For UNIX or Windows
			"source": "${localEnv:HOME}${localEnv:USERPROFILE}/.ssh",
			"target": "~/.ssh",
			"consistency": "cached"
		},
		 
		{
			"type": "bind",
			"source": "${localWorkspaceFolder}/app/",
			"target": "/app/"
		}
	]
}
