/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */

// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
// of the Software, and to permit persons to whom the Software is furnished to do
// so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin prefix($map, $vendors: webkit moz ms o) {
  @each $prop, $value in $map {
    @if $vendors {
      @each $vendor in $vendors {
        #{'-' + $vendor + '-' + $prop}: #{$value};
      }
    }
    // Dump regular property anyway
    #{$prop}: #{$value};
  }
}

@include keyframes(passing-through) {
  0% {
    @include prefix((transform: translateY(40px)));
    opacity: 0;
  }

  30%,
  70% {
    @include prefix((transform: translateY(0)));
    opacity: 1;
  }

  100% {
    @include prefix((transform: translateY(-40px)));
    opacity: 0;
  }
}

@include keyframes(slide-in) {
  0% {
    @include prefix((transform: translateY(40px)));
    opacity: 0;
  }

  30% {
    @include prefix((transform: translateY(0)));
    opacity: 1;
  }
}

@include keyframes(pulse) {
  0% { @include prefix((transform: scale(1))); }
  10% { @include prefix((transform: scale(1.1))); }
  20% { @include prefix((transform: scale(1))); }
}

.dropzone,
.dropzone * {
  box-sizing: border-box;
}

.dropzone {
  $image-size: 120px;
  $image-border-radius: 0;

  border: 1px solid $border-color;
  margin-bottom: 20px;
  min-height: 150px;
  padding: 20px 20px;
  transition: background-color .2s linear;

  &:hover {
    background-color: $brand-tertiary;
  }

  &.dz-clickable {
    cursor: pointer;

    * {
      cursor: default;
    }

    .dz-message {
      &,
      * {
        cursor: pointer;
      }
    }
  }

  &.dz-started {
    .dz-message {
      display: none;
    }
  }

  &.dz-drag-hover {
    border-style: solid;

    .dz-message {
      opacity: .5;
    }
  }

  .dz-message {
    color: $border-color;
    margin: 2em 0;
    text-align: center;
  }

  .dz-preview {
    display: inline-block;
    margin: 16px;
    min-height: 100px;
    position: relative;
    vertical-align: top;

    &:hover {
      // Making sure that always the hovered preview element is on top
      z-index: 1000;

      .dz-details {
        opacity: 1;
      }

      .dz-image {
        // opacity: 0.8;
        img {
          @include prefix((transform: scale(1.05, 1.05))); // Getting rid of that white bleed-in
          @include prefix((filter: blur(8px)), webkit); // Getting rid of that white bleed-in
        }
      }
    }

    &.dz-file-preview {
      .dz-image {
        // background: #999;
        // background: linear-gradient(to bottom, #eee, #ddd);
        border-radius: $image-border-radius;
      }

      .dz-details {
        opacity: 1;
      }
    }

    &.dz-image-preview {
      background: $white;

      .dz-details {
        @include prefix((transition: opacity .2s linear));
      }
    }

    .dz-remove {
      border: 0;
      cursor: pointer;
      display: block;
      font-size: 14px;
      text-align: center;

      &:hover {
        text-decoration: underline;
      }
    }

    .dz-details {
      $background-color: #444;
      $width: 120px;

      color: $brand-primary;
      font-size: 13px;
      left: 0;
      line-height: 150%;
      max-width: 100%;
      min-width: 100%;
      opacity: 0;
      padding: 2em 1em;
      position: absolute;
      text-align: center;
      top: 0;
      z-index: 20;

      .dz-size {
        font-size: 16px;
        margin-bottom: 1em;
      }

      .dz-filename {
        white-space: nowrap;

        &:hover {
          span {
            background-color: rgba(255, 255, 255, 0.8);
            border: 1px solid rgba(200, 200, 200, 0.8);
          }
        }

        &:not(:hover) {
          overflow: hidden;
          text-overflow: ellipsis;

          span {
            border: 1px solid transparent;
          }
        }

      }

      .dz-filename,
      .dz-size {
        span {
          background-color: rgba(255, 255, 255, 0.4);
          border-radius: 3px;
          padding: 0 .4em;
        }
      }

    }

    .dz-image {
      border-radius: $image-border-radius;
      display: block;
      height: $image-size;
      overflow: hidden;
      position: relative;
      width: $image-size;
      z-index: 10;

      img {
        display: block;
      }
    }

    &.dz-success {
      .dz-success-mark {
        @include prefix((animation: passing-through 3s cubic-bezier(.77, 0, .175, 1)));
      }
    }

    &.dz-error {
      .dz-error-mark {
        @include prefix((animation: slide-in 3s cubic-bezier(.77, 0, .175, 1)));
        opacity: 1;
      }

      .dz-error-message {
        display: block;
      }

      &:hover {
        .dz-error-message {
          opacity: 1;
          pointer-events: auto;
        }
      }
    }

    .dz-success-mark,
    .dz-error-mark {
      $image-height: 54px;
      $image-width: 54px;

      display: block;
      left: 50%;
      margin-left: -($image-width / 2);
      margin-top: -($image-height / 2);
      opacity: 0;
      pointer-events: none;
      position: absolute;
      top: 50%;
      z-index: 500;

      svg {
        display: block;
        height: $image-height;
        width: $image-width;
      }
    }

    &.dz-processing {
      .dz-progress {
        @include prefix((transition: all .2s linear));
        opacity: 1;
      }
    }

    &.dz-complete {
      .dz-progress {
        @include prefix((transition: opacity .4s ease-in));
        opacity: 0;
      }
    }

    &:not(.dz-processing) {
      .dz-progress {
        @include prefix((animation: pulse 6s ease infinite));
      }
    }

    .dz-progress {
      background: rgba(255, 255, 255, .9);
      border-radius: 8px;
      height: 16px;
      left: 50%;
      margin-left: -40px;
      margin-top: -8px;
      opacity: 1;
      overflow: hidden;
      pointer-events: none;
      position: absolute;
      top: 50%;
      width: 80px;
      z-index: 1000;

      // Fix for chrome bug: https://code.google.com/p/chromium/issues/detail?id=157218
      // -webkit-transform: scale(1);

      .dz-upload {
        @include prefix((transition: width 300ms ease-in-out));
        background: #333;
        background: linear-gradient(to bottom, #666, #444);
        bottom: 0;
        left: 0;
        position: absolute;
        top: 0;
        width: 0;
      }
    }

    .dz-error-message {
      $width: $image-size + 20px;
      $color: rgb(190, 38, 38);

      @include prefix((transition: opacity .3s ease));
      background-color: $state-danger-bg;
      border-radius: 8px;
      color: $state-danger-text;
      display: none;
      font-size: 13px;
      left: -10px;
      opacity: 0;
      padding: .5em 1.2em;
      pointer-events: none;
      position: absolute;
      top: $image-size + 10px;
      width: $width;
      z-index: 1000;

      // The triangle pointing up
      &::after {
        border-bottom: 6px solid $color;
        border-left: 6px solid transparent;
        border-right: 6px solid transparent;
        content: '';
        height: 0;
        left: $width / 2 - 6px;
        position: absolute;
        top: -6px;
        width: 0;
      }
    }
  }
}
